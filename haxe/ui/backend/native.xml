<?xml version="1.0" encoding="utf-8" ?>
<native>
    <component id="haxe.ui.components.Button" class="qt.widgets.PushButton" allowChildren="false" allowPadding="true">
        <behaviour id="text" class="haxe.ui.backend.qt.behaviours.ReflectProperty" />
        <behaviour id="icon" class="haxe.ui.backend.qt.behaviours.Icon" />
        <behaviour id="disabled" class="haxe.ui.backend.qt.behaviours.ReflectProperty" />
        <size class="haxe.ui.backend.qt.size.WidgetSize" includePadding="false" />
        <signal id="click" slot="connectClicked" mapTo="onMouseClickedSlot" />
    </component>    
    <component id="haxe.ui.components.Label" class="qt.widgets.Label" allowChildren="false" allowPadding="true">
        <behaviour id="text" class="haxe.ui.backend.qt.behaviours.ReflectProperty" />
        <behaviour id="disabled" class="haxe.ui.backend.qt.behaviours.ReflectProperty" />
        <size class="haxe.ui.backend.qt.size.WidgetSize" includePadding="false" />
    </component>    
    <component id="haxe.ui.components.TextField" class="qt.widgets.LineEdit" allowChildren="false">
        <behaviour id="text" class="haxe.ui.backend.qt.behaviours.ReflectProperty" />
        <behaviour id="disabled" class="haxe.ui.backend.qt.behaviours.ReflectProperty" />
        <size class="haxe.ui.backend.qt.size.WidgetSize" includePadding="false" />
    </component>
    <component id="haxe.ui.components.CheckBox" class="qt.widgets.CheckBox" allowChildren="false">
        <behaviour id="text" class="haxe.ui.backend.qt.behaviours.ReflectProperty" />
        <behaviour id="selected" class="haxe.ui.backend.qt.behaviours.ReflectProperty" targetProperty="checked" />
        <size class="haxe.ui.backend.qt.size.WidgetSize" includePadding="false" />
    </component>    
    <component id="haxe.ui.components.OptionBox" class="qt.widgets.RadioButton" allowChildren="false">
        <behaviour id="text" class="haxe.ui.backend.qt.behaviours.ReflectProperty" />
        <behaviour id="selected" class="haxe.ui.backend.qt.behaviours.ReflectProperty" targetProperty="checked" />
        <size class="haxe.ui.backend.qt.size.WidgetSize" includePadding="false" />
    </component>    
    <component id="haxe.ui.components.Image" class="qt.widgets.Label" allowChildren="false">
        <behaviour id="resource" class="haxe.ui.backend.qt.behaviours.ReflectProperty" targetProperty="pixmapResource" />
        <size class="haxe.ui.backend.qt.size.WidgetSize" includePadding="false" />
    </component>    
    <component id="haxe.ui.components.HorizontalSlider" class="qt.widgets.Slider" allowChildren="false" initializers="haxe.ui.backend.qt.initializers.OrientationInitializer" orientation="horizontal">
        <size class="haxe.ui.backend.qt.size.WidgetSize" includePadding="false" />
        <behaviour id="start" class="haxe.ui.behaviours.DataBehaviour" />
        <behaviour id="min" class="haxe.ui.behaviours.DataBehaviour" />
        <behaviour id="max" class="haxe.ui.behaviours.DataBehaviour" />
        <behaviour id="end" class="haxe.ui.backend.qt.behaviours.ReflectProperty" targetProperty="value" />
        <behaviour id="pos" class="haxe.ui.backend.qt.behaviours.ReflectProperty" targetProperty="value" />
    </component>    
    <component id="haxe.ui.components.VerticalSlider" class="qt.widgets.Slider" allowChildren="false" initializers="haxe.ui.backend.qt.initializers.OrientationInitializer" orientation="vertical">
        <size class="haxe.ui.backend.qt.size.WidgetSize" includePadding="false" />
        <behaviour id="start" class="haxe.ui.behaviours.DataBehaviour" />
        <behaviour id="min" class="haxe.ui.behaviours.DataBehaviour" />
        <behaviour id="max" class="haxe.ui.behaviours.DataBehaviour" />
        <behaviour id="end" class="haxe.ui.backend.qt.behaviours.ReflectProperty" targetProperty="value" />
        <behaviour id="pos" class="haxe.ui.backend.qt.behaviours.ReflectProperty" targetProperty="value" />
    </component>    
    <component id="haxe.ui.components.HorizontalProgress" class="qt.widgets.ProgressBar" allowChildren="false" initializers="haxe.ui.backend.qt.initializers.OrientationInitializer" orientation="horizontal">
        <size class="haxe.ui.backend.qt.size.WidgetSize" includePadding="false" />
        <behaviour id="min" class="haxe.ui.backend.qt.behaviours.ReflectProperty" targetProperty="minimum" />
        <behaviour id="max" class="haxe.ui.backend.qt.behaviours.ReflectProperty" targetProperty="maximum" />
        <behaviour id="end" class="haxe.ui.backend.qt.behaviours.ReflectProperty" targetProperty="value" />
        <behaviour id="indeterminate" class="haxe.ui.behaviours.DataBehaviour" />
        <behaviour id="pos" class="haxe.ui.backend.qt.behaviours.ReflectProperty" targetProperty="value" />
    </component>    
    <component id="haxe.ui.components.VerticalProgress" class="qt.widgets.ProgressBar" allowChildren="false" initializers="haxe.ui.backend.qt.initializers.OrientationInitializer" orientation="vertical">
        <size class="haxe.ui.backend.qt.size.WidgetSize" includePadding="false" />
        <behaviour id="min" class="haxe.ui.backend.qt.behaviours.ReflectProperty" targetProperty="minimum" />
        <behaviour id="max" class="haxe.ui.backend.qt.behaviours.ReflectProperty" targetProperty="maximum" />
        <behaviour id="end" class="haxe.ui.backend.qt.behaviours.ReflectProperty" targetProperty="value" />
        <behaviour id="indeterminate" class="haxe.ui.behaviours.DataBehaviour" />
        <behaviour id="pos" class="haxe.ui.backend.qt.behaviours.ReflectProperty" targetProperty="value" />
    </component>    
    <component id="haxe.ui.containers.ScrollView" class="qt.widgets.ScrollArea" initializers="haxe.ui.backend.qt.initializers.ScrollAreaInitializer">
        <builder111 class="haxe.ui.backend.qt.builders.ScrollViewBuilder" />
        <behaviour id="contentLayoutName" class="haxe.ui.behaviours.DefaultBehaviour" />
        <size class="haxe.ui.backend.qt.size.ScrollAreaSize" includePadding="false" />
    </component>    
    <component id="haxe.ui.containers.ListView" class="qt.widgets.ListWidget">
        <size class="haxe.ui.backend.qt.size.WidgetSize" includePadding="false" />
        <behaviour id="contentLayoutName" class="haxe.ui.behaviours.DefaultBehaviour" />
        <behaviour id="dataSource" class="haxe.ui.backend.qt.behaviours.ListWidgetDataSource" />
        <behaviour id="selectedIndex" class="haxe.ui.backend.qt.behaviours.ReflectProperty" targetProperty="selectedRow" autoDispatch="haxe.ui.events.UIEvent.CHANGE" />
        <signal id="change" slot="connectItemSelectionChanged" mapTo="onChangedSlot" />
    </component>    
    <component id="haxe.ui.containers.TabView" class="qt.widgets.TabWidget">
        <size class="haxe.ui.backend.qt.size.TabWidgetSize" includePadding="false" />
    </component>    
    <component id="haxe.ui.components.DropDown" class="qt.widgets.ComboBox" allowChildren="false">
        <size class="haxe.ui.backend.qt.size.WidgetSize" includePadding="false" />
        <behaviour id="text" class="haxe.ui.behaviours.DataBehaviour" />
        <behaviour id="selectedItem" class="haxe.ui.behaviours.DataBehaviour" />
        <behaviour id="disabled" class="haxe.ui.behaviours.DataBehaviour" />
        <behaviour id="selectedIndex" class="haxe.ui.backend.qt.behaviours.ReflectProperty" targetProperty="currentIndex" />
        <behaviour id="dataSource" class="haxe.ui.backend.qt.behaviours.ComboBoxDataSource" />
    </component>    
    
    
    <component id="haxe.ui.containers.menus.MenuBar" class="qt.widgets.MenuBar">
        <behaviour id="disabled" class="haxe.ui.behaviours.DefaultBehaviour" />
        <behaviour id="text" class="haxe.ui.behaviours.DefaultBehaviour" />
    </component>
    <component id="haxe.ui.containers.menus.Menu" class="qt.widgets.Menu">
        <behaviour id="disabled" class="haxe.ui.behaviours.DefaultBehaviour" />
        <behaviour id="text" class="haxe.ui.behaviours.DefaultBehaviour" />
    </component>
    <component id="haxe.ui.containers.menus.MenuItem" class="qt.widgets.Widget" allowChildren="false">
        <behaviour id="disabled" class="haxe.ui.behaviours.DefaultBehaviour" />
        <behaviour id="text" class="haxe.ui.behaviours.DefaultBehaviour" />
    </component>
    <component id="haxe.ui.containers.menus.MenuCheckBox" class="qt.widgets.Widget" allowChildren="false">
        <behaviour id="disabled" class="haxe.ui.behaviours.DefaultBehaviour" />
        <behaviour id="text" class="haxe.ui.behaviours.DefaultBehaviour" />
    </component>
    <component id="haxe.ui.containers.menus.MenuOptionBox" class="qt.widgets.Widget" allowChildren="false">
        <behaviour id="disabled" class="haxe.ui.behaviours.DefaultBehaviour" />
        <behaviour id="text" class="haxe.ui.behaviours.DefaultBehaviour" />
    </component>
    <component id="haxe.ui.containers.menus.MenuSeparator" class="qt.widgets.Widget" allowChildren="false">
        <behaviour id="disabled" class="haxe.ui.behaviours.DefaultBehaviour" />
        <behaviour id="text" class="haxe.ui.behaviours.DefaultBehaviour" />
    </component>
</native>